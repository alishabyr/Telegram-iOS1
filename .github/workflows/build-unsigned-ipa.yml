name: Build Unsigned IPA (Universal)

on:
  workflow_dispatch:
  push:
    branches: [ master, main ]

jobs:
  build:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app

      - name: Resolve Swift Packages
        run: xcodebuild -resolvePackageDependencies

      - name: Install CocoaPods if needed
        run: |
          if [ -f "Podfile" ]; then
            sudo gem install cocoapods --no-document
            pod install
          fi

      - name: Detect workspace/project and scheme
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          if ls *.xcworkspace >/dev/null 2>&1; then
            PROJ_TYPE="workspace"
            PROJ_FILE=$(ls *.xcworkspace | head -n1)
            SCHEMES=$(xcodebuild -list -json -workspace "$PROJ_FILE")
          else
            PROJ_TYPE="project"
            PROJ_FILE=$(ls *.xcodeproj | head -n1)
            SCHEMES=$(xcodebuild -list -json -project "$PROJ_FILE")
          fi
          SCHEME=$(/usr/bin/python3 -c 'import sys,json; d=json.load(sys.stdin); k="project" if "project" in d else "workspace"; print(d[k]["schemes"][0])' <<< "$SCHEMES")
          echo "type=$PROJ_TYPE"  >> $GITHUB_OUTPUT
          echo "file=$PROJ_FILE"  >> $GITHUB_OUTPUT
          echo "scheme=$SCHEME"   >> $GITHUB_OUTPUT
          echo "Detected $PROJ_TYPE: $PROJ_FILE, scheme: $SCHEME"

      - name: Build .app (unsigned, universal)
        shell: bash
        run: |
          set -euo pipefail
          SCHEME="${{ steps.detect.outputs.scheme }}"
          if [ "${{ steps.detect.outputs.type }}" = "workspace" ]; then
            xcodebuild \
              -workspace "${{ steps.detect.outputs.file }}" \
              -scheme "$SCHEME" \
              -configuration Release \
              -sdk iphoneos \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
              TARGETED_DEVICE_FAMILY="1,2" \
              clean build
          else
            xcodebuild \
              -project "${{ steps.detect.outputs.file }}" \
              -scheme "$SCHEME" \
              -configuration Release \
              -sdk iphoneos \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
              TARGETED_DEVICE_FAMILY="1,2" \
              clean build
          fi

      - name: Locate built .app
        id: locate
        shell: bash
        run: |
          set -euo pipefail
          APP_PATH=$(fin_

